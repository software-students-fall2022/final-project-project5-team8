# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Web App

on:
  push:
    branches-ignore: ["feedback"]
  pull_request:
    branches-ignore: ["feedback"]

env:
  FLASK_DEBUG: development
  MONGO_URI: mongodb://localhost:27017/
  MONGO_DBNAME: language

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade pyttsx3
          python -m pip install --upgrade SpeechRecognition
          python -m pip install --upgrade deep-translator
          python -m pip install --upgrade pymongo
          python -m pip install --upgrade flask
          python -m pip install --upgrade Flask-Bootstrap
          python -m pip install --upgrade Flask-Session
          python -m pip install --upgrade gTTS
          python -m pip install --upgrade Flask-gTTS
          python -m pip install --upgrade pytesseract
          python -m pip install --upgrade Pillow
          python -m pip install --upgrade Werkzeug
          python -m pip install --upgrade python-dotenv
          python -m pip install --upgrade pytest-cov
          sudo apt-get install libleptonica-dev tesseract-ocr libtesseract-dev python3-pil tesseract-ocr-eng tesseract-ocr-script-latn
          sudo apt-get install portaudio19-dev
          sudo apt-get install flac
          python -m pip install --upgrade PyAudio
          python -m pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: MongoDB in GitHub Actions
        uses: supercharge/mongodb-github-action@1.8.0
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: MongoDB in GitHub Actions
        uses: supercharge/mongodb-github-action@1.8.0
      - name: Test with pytest
        run: |
          pytest web_app/tests/test_webapp.py --cov
          pytest web_app/tests/test_database.py --cov

  dockhub_push:
    name: Push Docker image to Docker Hub
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./web_app
          push: true
          tags: hihillary/final-project-project5-team8-app
  deploy:
    runs-on: ubuntu-latest
    needs: dockhub_push
    steps:
      - name: DigitalOcean App Platform deployment
        uses: digitalocean/app_action@main
        with:
          app_name: plankton-app
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
